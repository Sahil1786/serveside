name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        description: Type of release
        default: patch
        required: true
        options:
          - patch
          - minor
          - major

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# require public member
# private member is treated as CONTRIBUTOR
permissions:
  contents: write # for checkout and tag
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  create_release_pr:
    name: Create Release Pull Request and tags
    if: github.actor == 'maniator'
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_BRANCH: release/next_${{ github.event.inputs.release_type }}_${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v3
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          token: ${{ secrets.NPM_TOKEN }}

      - name: Authenticate with Registry
        run: |
          echo "@serveside:registry=http://registry.npmjs.org/" > .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami

      - name: Install
        run: npm ci
      - name: Git Identity
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git checkout -B $RELEASE_BRANCH

      - name: Versionup commit
        run: |
          npm run version:ci -- ${{github.event.inputs.release_type}}

      - name: Create Pull Request
        id: cpr
        shell: bash -x {0}
        run: |
          git fetch origin main
          git push -f -u origin $RELEASE_BRANCH

          gh pr create \
            --label "Type: Release [${{github.event.inputs.release_type}}]" \
            --base main \
            --draft --fill \
            -a ${{ github.actor }}
