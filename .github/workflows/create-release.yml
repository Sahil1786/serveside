name: Publish module

on:
  workflow_dispatch:
    inputs:
      type:
        required: true
        default: create-canary
        description: |
          Default will publish a canary build
          To publish a real build off main send 'publish-release'
      pr_number:
        required: false
        default: '0'
        description: PR to read from for canary build

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

permissions:
  contents: read # for checkout
  pull-requests: write  # for comments
  packages: write # for publish

jobs:
  start:
    name: Start publishing
    runs-on: ubuntu-latest
    if: startsWith(github.event.inputs.type, 'create-canary') && github.actor == 'maniator'
    steps:
      - run: gh pr comment -b "ðŸŽ‰ Canary Release build started" ${{github.event.inputs.pr_number}} -R ${{ github.repository }}

  npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    if: |
      (
        startsWith(github.event.inputs.type, 'create-canary') || 
        startsWith(github.event.inputs.type, 'publish-release') 
      ) && 
      github.actor == 'maniator'
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: canary pr
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: |
          gh pr checkout ${{github.event.inputs.pr_number}} -R ${{ github.repository }}
          git merge origin/main
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v3
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          token: ${{ secrets.NPM_TOKEN }}
          scope: "@serveside"
      - name: Install dependencies
        run: npm ci
      - name: Publish canary to npm
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: npm run release:canary:ci
      - name: Publish to npm
        if: startsWith(github.event.inputs.type, 'publish-release')
        run: npm run release:ci

  gh:
    name: Publish to GH
    runs-on: ubuntu-latest
    if: |
      (
        startsWith(github.event.inputs.type, 'create-canary') || 
        startsWith(github.event.inputs.type, 'publish-release') 
      ) && 
      github.actor == 'maniator'
    env:
      NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: canary pr
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: |
          gh pr checkout ${{github.event.inputs.pr_number}} -R ${{ github.repository }}
          git merge origin/main
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Setup Node ${{ steps.nvm.outputs.NVMRC }}
        uses: actions/setup-node@v3
        with:
          node-version:  ${{ steps.nvm.outputs.NVMRC }}
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
          token: ${{ secrets.GITHUB_TOKEN }}
          scope: "@serveside"
      - name: Install dependencies
        run: npm ci
      - name: Publish canary to GH
        if: startsWith(github.event.inputs.type, 'create-canary')
        run: npm run release:canary:ci
      - name: Publish to GH
        if: startsWith(github.event.inputs.type, 'publish-release')
        run: npm run release:ci

  deploy-complete:
    name: Publishing Complete
    runs-on: ubuntu-latest
    needs:
      - start
      - gh
      - npm
    if: startsWith(github.event.inputs.type, 'create-canary') && github.actor == 'maniator'
    steps:
      - run: gh pr comment -b "ðŸŽ‰ Release complete" ${{github.event.inputs.pr_number}} -R ${{ github.repository }}
